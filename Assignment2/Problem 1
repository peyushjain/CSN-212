#include<bits/stdc++.h>
using namespace std;

class ZigZag {
public: 
int longestSeq(int A[],int n) {
    
   	int zzs[n],zzl[n];
	
	for(int i=0;i<n;i++){
		zzs[i]=zzl[i]=0;
	}
	zzs[0]=1;    // ends at greater el
	zzl[0]=1;    //ends at samller el
	for(int i=1;i<n;i++){
		for(int j=0;j<i;j++){
		  if(A[j]<A[i]){       // current length should be less than 1+length of longest subsequence ending at j
			zzs[i]=max(zzl[j],zzs[i]);
		  }
		  if(A[j]>A[i]){
			zzl[i]=max(zzs[j],zzl[i]);
		  }
	}
	  zzs[i]+=1;
	  zzl[i]+=1;
	}
	int ans=0;
	for(int i=0;i<n;i++){
		ans=max(ans,max(zzs[i],zzl[i]));
	}
	return ans;
 }
 
};

int main() {
  ios::sync_with_stdio(false);
  ZigZag problem;
  int input[] ={ 374, 40, 854, 203, 203, 156, 362, 279, 812, 955, 
600, 947, 978, 46, 100, 953, 670, 862, 568, 188, 
67, 669, 810, 704, 52, 861, 49, 640, 370, 908, 
477, 245, 413, 109, 659, 401, 483, 308, 609, 120, 
249, 22, 176, 279, 23, 22, 617, 462, 459, 244 };
  int n = sizeof(input)/sizeof(input[0]);
  cout<<problem.longestSeq(input,n)<<endl;
}
